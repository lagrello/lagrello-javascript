/**
 * Lagrello API
 * API specification for Lagrello, a simple to use authentication service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@lagrello.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ActivateTenantRequest from '../model/ActivateTenantRequest';
import CreateTenantRequest from '../model/CreateTenantRequest';
import Error from '../model/Error';
import Tenant from '../model/Tenant';
import UpdateTenantRequest from '../model/UpdateTenantRequest';

/**
* Tenants service.
* @module api/TenantsApi
* @version 1.0.0
*/
export default class TenantsApi {

    /**
    * Constructs a new TenantsApi. 
    * @alias module:api/TenantsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the tenantUpdate operation.
     * @callback module:api/TenantsApi~tenantUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Tenant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates tenant information
     * This endpoint is used to update certain information about your tenant. For example if you want to update your tenant's callback URL you will do that here.
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateTenantRequest} opts.updateTenantRequest 
     * @param {module:api/TenantsApi~tenantUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Tenant}
     */
    tenantUpdate(opts, callback) {
      opts = opts || {};
      let postBody = opts['updateTenantRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Tenant;
      return this.apiClient.callApi(
        '/v1/tenant', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenantsActivate operation.
     * @callback module:api/TenantsApi~tenantsActivateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Tenant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Activates the tenant, checks that all necessary information to activate a tenant is included
     * @param {Object} opts Optional parameters
     * @param {module:model/ActivateTenantRequest} opts.activateTenantRequest 
     * @param {module:api/TenantsApi~tenantsActivateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Tenant}
     */
    tenantsActivate(opts, callback) {
      opts = opts || {};
      let postBody = opts['activateTenantRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Tenant;
      return this.apiClient.callApi(
        '/v1/tenant/activate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenantsCreate operation.
     * @callback module:api/TenantsApi~tenantsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Tenant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates new tenant
     * @param {Object} opts Optional parameters
     * @param {module:model/CreateTenantRequest} opts.createTenantRequest 
     * @param {module:api/TenantsApi~tenantsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Tenant}
     */
    tenantsCreate(opts, callback) {
      opts = opts || {};
      let postBody = opts['createTenantRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Tenant;
      return this.apiClient.callApi(
        '/v1/tenant', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenantsCreate_0 operation.
     * @callback module:api/TenantsApi~tenantsCreate_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Tenant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes tenant caller is part of, will send verification email before deleting tenant
     * This endpoint will delete your tenant. Will send an email to the admin email address of the tenant confirming that you want to delete your tenant before deletion.
     * @param {module:api/TenantsApi~tenantsCreate_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Tenant}
     */
    tenantsCreate_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Tenant;
      return this.apiClient.callApi(
        '/v1/tenant', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tenantsGet operation.
     * @callback module:api/TenantsApi~tenantsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Tenant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the tenant information the caller is part of
     * @param {module:api/TenantsApi~tenantsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Tenant}
     */
    tenantsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Tenant;
      return this.apiClient.callApi(
        '/v1/tenant', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
