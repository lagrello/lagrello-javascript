/**
 * Lagrello API
 * API specification for Lagrello, a simple to use authentication service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@lagrello.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Token model module.
 * @module model/Token
 * @version 1.0.0
 */
class Token {
    /**
     * Constructs a new <code>Token</code>.
     * Access tokens are used when talking to the API, it will confirm your identity.
     * @alias module:model/Token
     * @param tokenKey {String} 
     * @param tokenName {String} 
     * @param createdBy {String} 
     * @param createdAt {Date} 
     * @param permissions {Array.<String>} 
     */
    constructor(tokenKey, tokenName, createdBy, createdAt, permissions) { 
        
        Token.initialize(this, tokenKey, tokenName, createdBy, createdAt, permissions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, tokenKey, tokenName, createdBy, createdAt, permissions) { 
        obj['tokenKey'] = tokenKey;
        obj['tokenName'] = tokenName;
        obj['createdBy'] = createdBy;
        obj['createdAt'] = createdAt;
        obj['permissions'] = permissions;
    }

    /**
     * Constructs a <code>Token</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Token} obj Optional instance to populate.
     * @return {module:model/Token} The populated <code>Token</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Token();

            if (data.hasOwnProperty('tokenKey')) {
                obj['tokenKey'] = ApiClient.convertToType(data['tokenKey'], 'String');
            }
            if (data.hasOwnProperty('tokenName')) {
                obj['tokenName'] = ApiClient.convertToType(data['tokenName'], 'String');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} tokenKey
 */
Token.prototype['tokenKey'] = undefined;

/**
 * @member {String} tokenName
 */
Token.prototype['tokenName'] = undefined;

/**
 * @member {String} createdBy
 */
Token.prototype['createdBy'] = undefined;

/**
 * @member {Date} createdAt
 */
Token.prototype['createdAt'] = undefined;

/**
 * @member {Array.<String>} permissions
 */
Token.prototype['permissions'] = undefined;






export default Token;

